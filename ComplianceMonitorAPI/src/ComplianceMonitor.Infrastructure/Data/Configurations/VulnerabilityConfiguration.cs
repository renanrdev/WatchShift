using ComplianceMonitor.Domain.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace ComplianceMonitor.Infrastructure.Data.Configurations
{
    public class VulnerabilityConfiguration : IEntityTypeConfiguration<Vulnerability>
    {
        public void Configure(EntityTypeBuilder<Vulnerability> builder)
        {
            builder.ToTable("Vulnerabilities");

            builder.HasKey(v => new { v.Id, v.ImageScanResultId });

            builder.Property(v => v.Id)
                .IsRequired()
                .HasMaxLength(100);

            builder.Property(v => v.ImageScanResultId)
                .IsRequired();

            builder.Property(v => v.PackageName)
                .IsRequired()
                .HasMaxLength(200);

            builder.Property(v => v.InstalledVersion)
                .IsRequired()
                .HasMaxLength(100);

            builder.Property(v => v.FixedVersion)
                .HasMaxLength(100);

            builder.Property(v => v.Severity)
                .IsRequired()
                .HasConversion<string>();

            builder.Property(v => v.Description)
                .HasMaxLength(2000);

            builder.HasOne(v => v.ImageScanResult)
                .WithMany(s => s.Vulnerabilities)
                .HasForeignKey(v => v.ImageScanResultId)
                .OnDelete(DeleteBehavior.Cascade);

            builder.HasIndex(v => v.Severity);
        }
    }
}